from django.contrib.auth.models import User
from django.test import TestCase
from django.conf import settings
from api.models import PasswordEntry
from cryptography.fernet import Fernet

class PasswordEntryTestCase(TestCase):
    def setUp(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        self.user = User.objects.create_user(username="testuser", password="testpassword")
        self.fernet = Fernet(settings.FERNET_KEY.encode())
        self.raw_password = "secure_password_123"
        self.encrypted_password = self.fernet.encrypt(self.raw_password.encode())

        self.entry = PasswordEntry.objects.create(
            user=self.user,
            service_name="GitHub",
            encrypted_password=self.encrypted_password
        )

    def test_password_encryption(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
        new_password = "new_secure_password"
        encrypted = self.entry.encrypt_password(new_password)
        decrypted = self.fernet.decrypt(encrypted).decode()

        self.assertEqual(new_password, decrypted, "üî¥ –û—à–∏–±–∫–∞: –ü–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!")

    def test_password_decryption(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
        decrypted_password = self.entry.decrypt_password()
        self.assertEqual(decrypted_password, self.raw_password, "üî¥ –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏!")

    def test_password_storage(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –±–∞–∑–µ"""
        self.entry.refresh_from_db()
        self.assertEqual(bytes(self.entry.encrypted_password), self.encrypted_password, "üî¥ –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –≤ –ë–î –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã!")

    def test_unique_constraint(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç –ø–∞—Ä–æ–ª—è –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"""
        with self.assertRaises(Exception):
            PasswordEntry.objects.create(user=self.user, service_name="GitHub", encrypted_password=self.encrypted_password)
