version: '3.8'

services:
  admin:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Europe/Moscow
    # command: gunicorn core.wsgi:application --bind 0.0.0.0:8000  --workers 4 --threads 2
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  migrate:
    build:
      context: .
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Europe/Moscow
    command: python manage.py migrate
    depends_on:
      - postgres
      - admin
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: on-failure

  postgres:
    image: "postgres:16-alpine"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Europe/Moscow
    ports:
      - "5430:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  tests:
    build:
      context: .
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Europe/Moscow
    command: >
      sh -c "python manage.py test || echo 'üî¥ –û–®–ò–ë–ö–ê: –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!'"
    depends_on:
      - postgres
      - migrate
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: on-failure

volumes:
  postgres_data: